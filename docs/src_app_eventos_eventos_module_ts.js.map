{"version":3,"file":"src_app_eventos_eventos_module_ts.js","mappings":"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","sources":["./src/app/eventos/eventos-form/eventos-form.component.ts","./src/app/eventos/eventos-form/eventos-form.component.html","./src/app/eventos/eventos-resolver.guard.ts","./src/app/eventos/eventos.module.ts","./src/app/eventos/eventos.routing.module.ts","./src/app/eventos/eventos.service.ts","./src/app/eventos/eventos/eventos.component.ts","./src/app/eventos/eventos/eventos.component.html"],"sourcesContent":["import { ActivatedRoute } from '@angular/router';\nimport { AlertModalService } from './../../shared/alert-modal.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { EventosService } from '../eventos.service';\nimport { Location } from '@angular/common';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-eventos-form',\n  templateUrl: './eventos-form.component.html',\n  styleUrls: ['./eventos-form.component.css']\n})\nexport class EventosFormComponent implements OnInit {\n\n  formevent: FormGroup;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private service: EventosService, private modal: AlertModalService, private location: Location, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    const evento = this.route.snapshot.data['evento'];\n\n    this.formevent = this.fb.group({\n      id: [evento.id],\n      tipo: [evento.tipo,[Validators.required]],\n      dataHora: [evento.dataHora,[Validators.required]],\n      descricao: [evento.descricao,[Validators.required]],\n      status: [evento.status,[Validators.required]]\n    });\n  }\n\n  hasError(field:string) {\n    return this.formevent.get(field).errors;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.formevent.valid) {\n\n      let msgSuccess = 'Evento salvo.';\n      let msgError = 'Erro ao salvar.';\n      if (this.formevent.value.id) {\n        msgSuccess = 'Evento atualizado.';\n        msgError = 'Erro ao atualizar.';\n      }\n\n      this.service.save(this.formevent.value).subscribe(\n        success => { this.modal.showAlertSuccess(msgSuccess); this.location.back() },\n        error => { this.modal.showAlertDanger(msgError); }\n      );\n    }\n  }\n\n  onCancel() {\n    this.submitted = false;\n    this.formevent.reset();\n    this.location.back();\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h5>Cadastro de cliente</h5>\n    </div>\n    <div class=\"card-body\">\n        <form class=\"needs-validation\" novalidate [formGroup]=\"formevent\">\n            <div class=\"form-row\">\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"tipo\">Tipo</label>\n                    <input type=\"text\" class=\"form-control\" id=\"tipo\" formControlName=\"tipo\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('tipo')}\" />\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"dataHora\">Data</label>\n                    <input type=\"date\" class=\"form-control\" id=\"dataHora\" formControlName=\"dataHora\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('dataHora') }\" />\n                </div>\n\n                <div class=\"col-md-5 mb-3\">\n                    <label for=\"descricao\">Descrição</label>\n                    <input type=\"text\" class=\"form-control\" id=\"descricao\" formControlName=\"descricao\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('descricao') }\" />\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-2 mb-3\">\n                    <label for=\"status\">Status</label>\n                    <select class=\"form-control\" id=\"status\" formControlName=\"status\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('status')}\">\n                        <option value=\"\"></option>\n                        <option value=\"ativo\">Ativo</option>\n                        <option value=\"concluido\">Concluido</option>\n                    </select>\n                </div>\n                </div>\n                <div>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Salvar</button>\n                <button type=\"button\" class=\"btn btn-defaut\" (click)=\"onCancel()\">Cancelar</button>\n            </div>\n        </form>\n    </div>\n</div>","import { EventosService } from './eventos.service';\nimport { Evento } from './evento';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventosResolverGuard implements Resolve<Evento> {\n\n  constructor(private service: EventosService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Evento> {\n    if (route.params && route.params['id']) {\n      return this.service.loadByID(route.params['id']);\n    }\n\n    return of({\n      id: null,\n      dataHora: null,\n      tipo: null,\n      descricao: null,\n      statis: null\n    });\n  }\n\n}\n","import { ReactiveFormsModule } from '@angular/forms';\nimport { EventosRoutingModule } from './eventos.routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EventosComponent } from './eventos/eventos.component';\nimport { EventosFormComponent } from './eventos-form/eventos-form.component';\n\n\n\n@NgModule({\n  declarations: [EventosComponent, EventosFormComponent],\n  imports: [\n    CommonModule,\n    EventosRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class EventosModule { }\n","import { EventosResolverGuard } from './eventos-resolver.guard';\nimport { EventosComponent } from './eventos/eventos.component';\nimport { EventosFormComponent } from './eventos-form/eventos-form.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule, Component } from '@angular/core';\n\nconst eventosRoutes: Routes = [\n    {\n        path: '',\n        component: EventosComponent\n    },\n    {\n        path: 'novo',\n        component: EventosFormComponent,\n        resolve: { evento: EventosResolverGuard}\n    },\n    {\n        path: 'editar/:id',\n        component: EventosFormComponent,\n        resolve: { evento: EventosResolverGuard}\n    }\n\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(eventosRoutes)],\n    exports: [RouterModule]\n})\nexport class EventosRoutingModule {}","import { Evento } from './evento';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventosService {\n\n  private readonly API = 'http://localhost:8080/eventos';\n\n  constructor(private http: HttpClient) { }\n\n  list() {\n    return this.http.get<Evento[]>(this.API);\n  }\n\n  loadByID(id) {\n    return this.http.get<Evento>(`${this.API}/${id}`).pipe(take(1));\n  }\n\n  create(evento) {\n    return this.http.post(this.API, evento).pipe(take(1));\n  }\n\n  update(evento) {\n    return this.http.put(`${this.API}/${evento.id}`, evento).pipe(take(1));\n  }\n\n  save(evento) {\n    if (evento.id) {\n      return this.update(evento);\n    }\n    return this.create(evento);\n  }\n  \n  remove(id){\n    return this.http.delete(`${this.API}/${id}`).pipe(take(1));\n  }\n}","import { environment } from './../../../environments/environment';\nimport { AuthService } from './../../login/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { AlertModalService } from './../../shared/alert-modal.service';\nimport { EventosService } from './../eventos.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, OnInit } from '@angular/core';\nimport { Evento } from '../evento';\nimport { empty } from 'rxjs';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.css'],\n  preserveWhitespaces: true\n})\nexport class EventosComponent implements OnInit {\n\n  bsModalRef: BsModalRef;\n  eventos: Evento[];  \n  visiBt: boolean = false; \n\n  constructor(private auto: AuthService, private service: EventosService, private alertService: AlertModalService, private router: Router,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.list();\n\n    if (environment.roles === true) {\n      this.visiBt = true;\n    }\n  }\n  \n  list() {\n    this.service.list().pipe(catchError(erro => {this.handleError(); return empty();})).subscribe(dados => {this.eventos = dados, console.log(dados)});\n  }\n\n  handleError() {\n    this.alertService.showAlertDanger('Erro ao buscar eventos.');\n  }\n\n  onEdit(id) {\n    this.router.navigate(['editar', id], {relativeTo: this.route});\n  }\n  \n  onDelete(id){\n    this.service.remove(id).subscribe(success => {this.list();}, error => {this.alertService.showAlertDanger(\"Erro ao excluir\");});\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"float-left\">\n            <h4>Eventos</h4>\n        </div>\n        <div class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['novo']\">Novo evento</button>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Data</th>\n                    <th>Tipo</th>\n                    <th>Descrição</th>\n                    <th>Status</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let evento of eventos\">\n                    <td>{{ evento.id }}</td>\n                    <td>{{ evento.dataHora }}</td>\n                    <td>{{ evento.tipo }}</td>\n                    <td>{{ evento.descricao }}</td>\n                    <td>{{ evento.status }}</td>\n                    <td>\n                        <span class=\"float-rigth\">\n                            <button class=\"btn btn-outline-warning mb-1 btn-sm\" (click)=\"onEdit(evento.id)\">\n                                Editar\n                            </button>\n                            <button *ngIf=\"visiBt\" class=\"btn btn-outline-danger mb-1 btn-sm\" (click)=\"onDelete(evento.id)\">\n                                Excluir\n                            </button>\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}