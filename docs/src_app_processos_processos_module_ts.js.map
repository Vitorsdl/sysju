{"version":3,"file":"src_app_processos_processos_module_ts.js","mappings":"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","sources":["./src/app/Comarca/comarca.service.ts","./src/app/processos/processo-resolver.guard.ts","./src/app/processos/processos-form/processos-form.component.ts","./src/app/processos/processos-form/processos-form.component.html","./src/app/processos/processos.module.ts","./src/app/processos/processos.routing.module.ts","./src/app/processos/processos.service.ts","./src/app/processos/processos/processos.component.ts","./src/app/processos/processos/processos.component.html"],"sourcesContent":["import { Comarca } from './comarca';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComarcasService {\n\n  private readonly API = 'http://localhost:8080/comarcas';\n\n  constructor(private http: HttpClient) { }\n\n  list() {\n    return this.http.get<Comarca[]>(this.API);\n  }\n\n  loadByID(id) {\n    return this.http.get<Comarca>(`${this.API}/${id}`).pipe(take(1));\n  }\n}","import { ProcessosService } from './processos.service';\nimport { Processo } from './processo';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessoResolverGuard implements Resolve<Processo> {\n\n  constructor(private service: ProcessosService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Processo> {\n    if (route.params && route.params['id']) {\n      return this.service.loadByID(route.params['id']);\n    }\n\n    return of({\n      id: null,\n      numero: null,\n      tipo: null,\n      procedimento: null,\n      comarca: null,\n      vara: null,\n      resultadoRecurso: null,\n      cliente: null,\n      advogado: null\n    });\n  }\n\n}\n","import { ComarcasService } from './../../Comarca/comarca.service';\nimport { Comarca } from './../../Comarca/comarca';\nimport { AdvogadosService } from './../../advogados/advogados.service';\nimport { Advogado } from './../../advogados/advogado';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClientesService } from './../../clientes/clientes.service';\nimport { Cliente } from './../../clientes/cliente';\nimport { AlertModalService } from './../../shared/alert-modal.service';\nimport { ProcessosService } from './../processos.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-processos-form',\n  templateUrl: './processos-form.component.html',\n  styleUrls: ['./processos-form.component.css']\n})\nexport class ProcessosFormComponent implements OnInit {\n\n  formproc: FormGroup;\n  submitted = false;\n  clientes: Cliente[];\n  advogados: Advogado[];\n  comarcas: Comarca[];\n\n  constructor(private fb: FormBuilder, private service: ProcessosService, private servicecl: ClientesService, private servicead: AdvogadosService, private serviceco: ComarcasService, private modal: AlertModalService, private location: Location, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    const processo = this.route.snapshot.data['processo'];\n    if(processo.cliente_id != null){\n\n    }\n    \n    this.list();\n\n    this.formproc = this.fb.group({\n      id: [processo.id],\n      numero: [processo.numero, [Validators.required]],\n      tipo: [processo.tipo, [Validators.required]],\n      procedimento: [processo.procedimento, [Validators.required]],\n      vara: [processo.vara, [Validators.required]],\n      resultadoRecurso: [processo.resultadoRecurso, [Validators.required]],\n      cliente: this.fb.group({\n        id: [processo.cliente, [Validators.required]]\n      }),\n      advogado: this.fb.group({\n        id: [processo.advogado, [Validators.required]]\n      }),\n      comarca: this.fb.group({\n        id: [processo.comarca, [Validators.required]]\n      })\n    });\n  }\n\n  list() {\n    this.servicecl.list().subscribe(dados => { this.clientes = dados, console.log(dados) });\n    this.servicead.list().subscribe(dados => { this.advogados = dados});\n    this.serviceco.list().subscribe(dados => {this.comarcas = dados});\n  }\n\n  hasError(field: string) {\n    return this.formproc.get(field).errors;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log(this.formproc.value);\n    if (this.formproc.valid) {\n\n      let msgSuccess = 'Processo salvo.';\n      let msgError = 'Erro ao salvar.';\n      if (this.formproc.value.id) {\n        msgSuccess = 'Processo atualizado.';\n        msgError = 'Erro ao atualizar.';\n      }\n\n      this.service.save(this.formproc.value).subscribe(\n        success => { this.modal.showAlertSuccess(msgSuccess); this.location.back() },\n        error => { this.modal.showAlertDanger(msgError); }\n      );\n    }\n  }\n\n  onCancel() {\n    this.submitted = false;\n    this.formproc.reset();\n    this.location.back();\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h5>Cadastro de processo</h5>\n    </div>\n    <div class=\"card-body\">\n        <form class=\"needs-validation\" novalidate [formGroup]=\"formproc\">\n            <div class=\"form-row\">\n                <div class=\"col-md-2 mb-3\">\n                    <label for=\"numero\">Numero</label>\n                    <input type=\"text\" class=\"form-control\" id=\"numero\" formControlName=\"numero\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('numero') }\" />\n                    <!--<div class=\"Invalid-feedback\" *ngIf=\"hasError && hasError('numero')['required']\">\n                        Campo vazio!\n                    </div>-->\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"tipo\">Tipo</label>\n                    <input type=\"text\" class=\"form-control\" id=\"tipo\" formControlName=\"tipo\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('tipo') }\" />\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"procedimento\">Ação do Processo</label>\n                    <input type=\"text\" class=\"form-control\" id=\"procedimento\" formControlName=\"procedimento\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('procedimento') }\" />\n                </div>\n                <div class=\"col-md-4 mb-3\" formGroupName=\"comarca\">\n                    <label for=\"comarca\">Comarca</label>\n                    <select class=\"form-control\" id=\"comarca\" formControlName=\"id\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('comarca')}\">\n                        <option value=\"\"></option>\n                        <option value=\"{{ comarca.id }}\" *ngFor=\"let comarca of comarcas\">{{ comarca.comarca }}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-3 mb-3\" formGroupName=\"cliente\">\n                    <label for=\"cliente\">Cliente</label>\n                    <select class=\"form-control\" id=\"cliente\" formControlName=\"id\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('cliente') }\">\n                        <option value=\"\"></option>\n                        <option value=\"{{ cliente.id }}\" *ngFor=\"let cliente of clientes\">{{ cliente.nome }}</option>\n                    </select>\n                </div>\n                <div class=\"col-md-2 mb-3\">\n                    <label for=\"vara\">Vara</label>\n                    <input type=\"text\" class=\"form-control\" id=\"vara\" formControlName=\"vara\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('vara') }\" />\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"resultadoRecurso\">Resultado do recurso</label>\n                    <input type=\"text\" class=\"form-control\" id=\"resultadoRecurso\" formControlName=\"resultadoRecurso\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('resultadoRecurso') }\" />\n                </div>\n                <div class=\"col-md-3 mb-3\" formGroupName=\"advogado\">\n                    <label for=\"advogado\">Advogado</label>\n                    <select class=\"form-control\" id=\"advogado\" formControlName=\"id\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('advogado')}\">\n                        <option value=\"\"></option>\n                        <option value=\"{{ advogado.id }}\" *ngFor=\"let advogado of advogados\">{{ advogado.nome }}</option>\n                    </select>\n                </div>\n            </div>\n            <div style=\"margin-top: 10px\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Salvar</button>\n                <button type=\"button\" class=\"btn btn-defaut\" (click)=\"onCancel()\">Cancelar</button>\n            </div>\n        </form>\n    </div>\n</div>","import { ReactiveFormsModule } from '@angular/forms';\nimport { ProcessoRoutingModule } from './processos.routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProcessosComponent } from './processos/processos.component';\nimport { ProcessosFormComponent } from './processos-form/processos-form.component';\n\n\n\n@NgModule({\n  declarations: [ProcessosComponent, ProcessosFormComponent],\n  imports: [\n    CommonModule,\n    ProcessoRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class ProcessosModule { }\n","import { ProcessoResolverGuard } from './processo-resolver.guard';\nimport { ProcessosFormComponent } from './processos-form/processos-form.component';\nimport { ProcessosComponent } from './processos/processos.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule, Component } from '@angular/core';\n\n\nconst processosRoutes: Routes = [\n    {\n        path: '',\n        component: ProcessosComponent\n    },\n    {\n        path: 'novo',\n        component: ProcessosFormComponent,\n        resolve: { processo: ProcessoResolverGuard}\n    },\n    {\n        path: 'editar/:id',\n        component: ProcessosFormComponent,\n        resolve: { processo: ProcessoResolverGuard}\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(processosRoutes)],\n    exports: [RouterModule]\n})\nexport class ProcessoRoutingModule {}","import { Processo } from './processo';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessosService {\n\n  private readonly API = 'http://localhost:8080/processos';\n\n  constructor(private http: HttpClient) { }\n\n  list() {\n    return this.http.get<Processo[]>(this.API);\n  }\n\n  loadByID(id) {\n    return this.http.get<Processo>(`${this.API}/${id}`).pipe(take(1));\n  }\n\n  create(processo) {\n    return this.http.post(this.API, processo).pipe(take(1));\n  }\n\n  update(processo) {\n    return this.http.put(`${this.API}/${processo.id}`, processo).pipe(take(1));\n  }\n\n  save(processo) {\n    if (processo.id) {\n      return this.update(processo);\n    }\n    return this.create(processo);\n  }\n\n  remove(id){\n    return this.http.delete(`${this.API}/${id}`).pipe(take(1));\n  }\n}","import { environment } from './../../../environments/environment';\nimport { AuthService } from './../../login/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertModalService } from './../../shared/alert-modal.service';\nimport { ProcessosService } from './../processos.service';\nimport { Processo } from './../processo';\nimport { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { catchError } from 'rxjs/operators';\nimport { empty } from 'rxjs';\n\n@Component({\n  selector: 'app-processos',\n  templateUrl: './processos.component.html',\n  styleUrls: ['./processos.component.css']\n})\nexport class ProcessosComponent implements OnInit {\n\n  public paginaAtual = 1; //quando o componente carregar iniciara da pagina 1.\n\n  bsModalRef: BsModalRef;\n  processos: Processo[];\n  visiBt: boolean = false;\n  _id: '';\n  _numero: '';\n  _tipo: '';\n  _procedimento: '';\n  _comarca: '';\n  _vara: '';\n  _resultadoRecurso: '';\n  _cliente: '';\n  _advogado: '';\n\n  constructor(private auto: AuthService, private service: ProcessosService, private alertService: AlertModalService, private router: Router,private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.list();\n\n    if (environment.roles === true) {\n      this.visiBt = true;\n    }\n  }\n  \n  list() {\n    this.service.list().pipe(catchError(erro => {this.handleError(); return empty();})).subscribe(dados => {this.processos = dados, console.log(dados)})\n  }\n\n  buscaDados(id, numero, tipo, procedimento, comarca, vara, resultadoRecurso, cliente, advogado){\n    this._id = id;\n    this._numero = numero;\n    this._tipo = tipo;\n    this._procedimento = procedimento;\n    this._comarca = comarca;\n    this._vara = vara;\n    this._resultadoRecurso = resultadoRecurso;\n    this._cliente = cliente;\n    this._advogado = advogado;\n  }\n\n  handleError() {\n    this.alertService.showAlertDanger('Erro ao buscar processos.');\n  }\n\n  onEdit(id) {\n    this.router.navigate(['editar', id], {relativeTo: this.route});\n  }\n\n  onDelete(id){\n    this.service.remove(id).subscribe(success => {this.list();}, error => {this.alertService.showAlertDanger(\"Erro ao excluir\");});\n  }  \n}","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"float-left\">\n            <h4>Processos</h4>\n        </div>\n        <div class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['novo']\">Novo processo</button>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Numero</th>\n                    <th>Tipo</th>\n                    <th>Ação Processo</th>\n                    <th>Comarca</th>\n                    <th>Cliente</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let processo of processos\"> <!--| paginate: { itemsPerPage: 5, currentPage: paginaAtual }; let i = index-->\n                    <td>{{ processo.id }}</td>\n                    <td>{{ processo.numero }}</td>\n                    <td>{{ processo.tipo }}</td>\n                    <td>{{ processo.procedimento }}</td>\n                    <td>{{ processo.comarca.comarca }}</td>\n                    <td>{{ processo.cliente.nome }}</td>\n                    <td>\n                        <span class=\"float-rigth\">\n                            <button type=\"button\" class=\"btn btn-outline-warning mb-1 btn-sm\" data-toggle=\"modal\"\n                                data-target=\"#ModalInfo\" (click)=\"buscaDados(processo.id, processo.numero,  processo.tipo, processo.procedimento, processo.comarca.comarca, processo.vara, processo.resultadoRecurso, processo.cliente.nome, processo.advogado.nome)\">\n                                Visualizar\n                            </button>\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n            <!--<pagination-controls (pageChange)=\"paginaAtual = $event\" previousLabel=\"Anterior\" nextLabel=\"Próximo\"></pagination-controls>-->\n        </table>\n    </div>\n\n    <!--Modal de informações-->\n\n    <div class=\"modal fade\" id=\"ModalInfo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ModalInfoLabel\"\n        aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"ModalInfoLabel\">Informações do processo</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <b>N° do processo: </b>{{ _numero }}<p>\n                    Tipo: {{ _tipo }}<p>\n                    Procedimetno: {{ _procedimento }}<p>\n                    Comarca: {{ _comarca }}<p>\n                    Vara: {{ _vara }}<p>\n                    Resultado do recurso: {{ _resultadoRecurso }}<p>\n                    Cliente: {{ _cliente }} <p>\n                    Advogado: {{ _advogado }}\n                </div>\n                <div class=\"modal-footer\">                    \n                    <button class=\"btn btn-outline-warning mb-1 btn-sm\" (click)=\"onEdit(_id)\" data-dismiss=\"modal\">Editar</button>\n                    <button *ngIf=\"visiBt\" class=\"btn btn-outline-danger mb-1 btn-sm\" (click)=\"onDelete(_id)\" data-dismiss=\"modal\">Excluir</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!--fim-->\n</div>"],"names":[],"sourceRoot":"webpack:///"}