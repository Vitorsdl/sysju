{"version":3,"file":"src_app_usuarios_usuarios_module_ts.js","mappings":"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","sources":["./src/app/usuarios/usuarios-form/usuarios-form.component.ts","./src/app/usuarios/usuarios-form/usuarios-form.component.html","./src/app/usuarios/usuarios-resolver.guard.ts","./src/app/usuarios/usuarios.module.ts","./src/app/usuarios/usuarios.routing.module.ts","./src/app/usuarios/usuarios.service.ts","./src/app/usuarios/usuarios/usuarios.component.ts","./src/app/usuarios/usuarios/usuarios.component.html"],"sourcesContent":["import { ActivatedRoute } from '@angular/router';\nimport { AlertModalService } from './../../shared/alert-modal.service';\nimport { UsuariosService } from './../usuarios.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-usuarios-form',\n  templateUrl: './usuarios-form.component.html',\n  styleUrls: ['./usuarios-form.component.css']\n})\nexport class UsuariosFormComponent implements OnInit {\n\n  formuser: FormGroup;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private service: UsuariosService, private modal: AlertModalService, private location: Location, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    const usuario = this.route.snapshot.data['usuario'];\n\n    this.formuser = this.fb.group({\n      login: [usuario.login,[Validators.required]],\n      senha: [usuario.senha,[Validators.required]],\n      roles: [usuario.roles,[Validators.required]],\n  });\n  }\n\n  hasError(field:string) {\n    return this.formuser.get(field).errors;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.formuser.valid) {\n\n      let msgSuccess = 'Usuario salvo.';\n      let msgError = 'Erro ao salvar.';\n      if (this.formuser.value.id) {\n        msgSuccess = 'Usuario atualizado.';\n        msgError = 'Erro ao atualizar.';\n      }\n\n      this.service.save(this.formuser.value).subscribe(\n        success => { this.modal.showAlertSuccess(msgSuccess); this.location.back() },\n        error => { this.modal.showAlertDanger(msgError)}\n      );\n    }\n  }\n\n  onCancel() {\n    this.submitted = false;\n    this.formuser.reset();\n    this.location.back();\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h5>Cadastro dos usuarios</h5>\n    </div>\n    <div class=\"card-body\">\n        <form class=\"needs-validation\" novalidate [formGroup]=\"formuser\">\n            <div class=\"form-row\">\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"login\">Login</label>\n                    <input type=\"text\" class=\"form-control\" id=\"login\" formControlName=\"login\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('login')}\" />\n                </div>\n                <div class=\"col-md-3 mb-3\">\n                    <label for=\"senha\">senha</label>\n                    <input type=\"password\" class=\"form-control\" id=\"senha\" formControlName=\"senha\"\n                        [ngClass]=\"{ 'is-invalid': submitted && hasError('senha')}\" />\n                </div>\n            <div class=\"col-md-3 mb-3\">\n                <label for=\"roles\">Tipo</label>\n                <select class=\"form-control\" id=\"roles\" formControlName=\"roles\"\n                    [ngClass]=\"{ 'is-invalid': submitted && hasError('roles')}\">\n                    <option value=\"\"></option>\n                    <option value=\"Usuario\">Usuario</option>\n                    <option value=\"Administrador\">Administrador</option>\n                </select>\n            </div>\n        </div>\n            <div>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Salvar</button>\n                <button type=\"button\" class=\"btn btn-defaut\" (click)=\"onCancel()\">Cancelar</button>\n            </div>\n        </form>\n    </div>\n</div>","import { UsuariosService } from './usuarios.service';\nimport { Usuario } from './../login/usuario';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosResolverGuard implements Resolve<Usuario> {\n  \n  constructor(private service: UsuariosService){ }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Usuario> {\n    if (route.params && route.params['login']) {\n      return this.service.loadByLogin(route.params['login']);\n    }\n\n    return of({\n      id: null,\n      login: null,\n      senha: null,\n      roles: null\n    });\n  }\n\n}\n","import { UsuariosRoutingModule } from './usuarios.routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsuariosComponent } from './usuarios/usuarios.component';\nimport { UsuariosFormComponent } from './usuarios-form/usuarios-form.component';\n\n\n\n@NgModule({\n  declarations: [UsuariosComponent, UsuariosFormComponent],\n  imports: [\n    CommonModule,\n    UsuariosRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class UsuariosModule { }\n","import { UsuariosResolverGuard } from './usuarios-resolver.guard';\nimport { UsuariosFormComponent } from './usuarios-form/usuarios-form.component';\nimport { UsuariosComponent } from './usuarios/usuarios.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule, Component } from '@angular/core';\n\nconst usuariosRoutes: Routes = [\n    {\n        path: '',\n        component: UsuariosComponent\n    },\n    {\n        path: 'novo',\n        component: UsuariosFormComponent,\n        resolve: { usuario: UsuariosResolverGuard}\n    },\n    {\n        path: 'editar/:id',\n        component: UsuariosFormComponent,\n        resolve: { usuario: UsuariosResolverGuard}\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(usuariosRoutes)],\n    exports: [RouterModule]\n})\nexport class UsuariosRoutingModule {}","import { take } from 'rxjs/operators';\nimport { Usuario } from './../login/usuario';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n\n  private readonly API = 'http://localhost:8080/usuarios';\n\n  constructor(private http: HttpClient) { }\n\n  list() {\n    return this.http.get<Usuario[]>(this.API);\n  }\n\n  loadByLogin(login) {\n    return this.http.get<Usuario>(`${this.API}/${login}`).pipe(take(1));\n  }\n\n  create(usuario) {\n    return this.http.post(this.API, usuario).pipe(take(1));\n  }\n\n  update(usuario) {\n    return this.http.put(`${this.API}/${usuario.login}`, usuario).pipe(take(1));\n  }\n\n  save(usuario) {\n    return this.create(usuario);\n  }  \n\n  remove(login){\n    return this.http.delete(`${this.API}/${login}`).pipe(take(1));\n  }\n}\n","import { catchError } from 'rxjs/operators';\nimport { empty } from 'rxjs';\nimport { Usuario } from './../../login/usuario';\nimport { UsuariosService } from './../usuarios.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertModalService } from './../../shared/alert-modal.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css'],\n  preserveWhitespaces: true\n})\nexport class UsuariosComponent implements OnInit {\n\n  bsModalRef: BsModalRef;\n  usuarios: Usuario[];\n\n  constructor(private service: UsuariosService, private alertService: AlertModalService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.list();\n  }\n\n  list() {\n    this.service.list().pipe(catchError(erro => { this.handleError(); return empty(); })).subscribe(dados => { this.usuarios = dados, console.log(dados) });\n  }\n\n  handleError() {\n    this.alertService.showAlertDanger('Erro ao buscar usuarios.');\n  } \n\n  onDelete(login){\n    this.service.remove(login).subscribe(success => {this.list();}, error => {this.alertService.showAlertDanger(\"Erro ao excluir\");});\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <div class=\"float-left\">\n            <h4>Usuarios</h4>\n        </div>\n        <div class=\"float-right\">\n            <button type=\"button\" class=\"btn btn-primary\" [routerLink]=\"['novo']\">Novo usuario</button>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <table class=\"table table-hover\">\n            <thead>\n                <tr>\n                    <th>login</th>\n                    <th>Tipo</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let usuario of usuarios\">\n                    \n                    <td>{{ usuario.login }}</td>\n                    <td>{{ usuario.roles }}</td>\n                    <td>\n                        <span class=\"float-rigth\">\n                            <button class=\"btn btn-outline-danger mb-1 btn-sm\" (click)=\"onDelete(usuario.login)\">\n                                Excluir\n                            </button>\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}